FROM torch-tf-base

RUN conda install -n base nb_conda waitress datashader && \
    conda install -n base -c conda-forge "nodejs>=10.0.0" jupyterlab jupyterlab-git dask-ml dask-labextension dask-xgboost "spacy>=2.3.2" shap umap-learn tslearn kmodes imbalanced-learn pymc3 stumpy tqdm node2vec mlflow ipywidgets
# && \

RUN jupyter labextension install dask-labextension && \
    jupyter serverextension enable --py --sys-prefix dask_labextension --user && \
    # pip install jupyter-tensorboard && \
    #  jupyter labextension install jupyterlab_tensorboard && \
    # jupyter serverextension enable --py --sys-prefix jupyter_tensorboard && \
    # jupyter tensorboard enable --user && \
    python -m spacy download en_core_web_sm && \
    pip install pyarrow>=3.0.0 vaex>=4.0.0 bocd spacytextblob==0.1.7 spektral && \
    jupyter lab build && \
    jupyter lab clean && \
    pip install pyopenssl && \
    apt-get update && apt-get install -y build-essential && \
    pip install pyfim
RUN pip install rrcf 
#RUN pip install auto-sklearn 
RUN pip install pyod kats neuralprophet
RUN pip install splunk-sdk splunk-opentelemetry[all] opentelemetry-instrumentation-fastapi
RUN conda install pyg -c pyg
RUN conda install -n base -c conda-forge widgetsnbextension

RUN jupyter labextension install @jupyter-widgets/jupyterlab-manager
RUN jupyter labextension enable --py widgetsnbextension

RUN conda install -n base -c conda-forge "fastapi>=0.76.0"
RUN conda install -n base aiofiles
RUN conda clean --all -f -y && \
    find "/opt/conda" -depth \( -type f -a -name '*.pyc' -o -name '*.pyo' -o -name '*.a' -o -name '*.js.map' \) -exec rm -rf '{}' \;

RUN apt-get update && apt-get upgrade -y

RUN mkdir /dltk
# Define working directory
WORKDIR /srv

# Copy bootstrap entry point script
COPY bootstrap_fast.sh /dltk/
COPY app /dltk/app
COPY notebooks /dltk/notebooks
# Copy certificates generated with
# openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout dltk.key -out dltk.pem
COPY config/dltk.key /dltk/.jupyter/dltk.key
COPY config/dltk.pem /dltk/.jupyter/dltk.pem
# Copy jupyter config
COPY config/jupyter_notebook_config.py /dltk/.jupyter/jupyter_notebook_config.py
# Copy jupyter notebook conversion template to export python module
COPY config/jupyter_notebook_template.tpl /dltk/.jupyter/jupyter_notebook_conversion.tpl
COPY config/null.tpl /dltk/.jupyter/null.tpl

# Handle user rights
RUN chgrp -R 0 /dltk && \
    chmod -R g=u /dltk
RUN chgrp -R 0 /srv && \
    chmod -R g=u /srv
RUN chmod g+w /etc/passwd
USER 1001

# Install additional user libraries

# Expose container port 5000 (MLTK Container Service) and 8888 (Notebook) and 6006 (Tensorboard)
EXPOSE 5000 8888 6006

# Define bootstrap as entry point to start container
ENTRYPOINT ["/dltk/bootstrap_fast.sh"]
